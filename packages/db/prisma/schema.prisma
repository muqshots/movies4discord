generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Server {
  EU
  US
  AS
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  server Server @default(EU)

  Watchlist Watchlist[]
  Viewkeys  Viewkey[]
}

model Watchlist {
  id        String   @id @default(cuid())
  userId    String
  tmdbId    Int
  isShow    Boolean
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, tmdbId, isShow])
}

model Viewkey {
  key       String   @id @default(cuid())
  userId    String
  tmvdbId   Int
  isShow    Boolean
  season    Int
  episode   Int
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, tmvdbId, isShow, season, episode])
}
